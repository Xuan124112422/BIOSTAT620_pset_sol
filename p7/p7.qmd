---
title: "Pset 07 "
author: "hongye xuan"
date: "`r Sys.Date()`"
format: html
execute:
  echo: true   # Show all code
  eval: true   # Ensure all code runs
  warning: false
  message: false
---

```{r eval=TRUE}
library(HistData)
library(dplyr)

set.seed(2007)
heights <- GaltonFamilies %>%
  filter(gender == "female") %>%  # 仅保留女性子女
  group_by(family) %>%
  sample_n(1) %>%  # 随机抽取一名女儿
  ungroup() %>%
  select(father, childHeight) %>%
  rename(daughter = childHeight)


```

```{r eval=TRUE}
mu_x <- mean(heights$father)
mu_y <- mean(heights$daughter)
sigma_x <- sd(heights$father)
sigma_y <- sd(heights$daughter)
rho <- cor(heights$father, heights$daughter)

beta <- rho * (sigma_y / sigma_x)
alpha <- mu_y - beta * mu_x
c(intercept = alpha, slope = beta)



```

```{r eval=TRUE}
library(ggplot2)

ggplot(heights, aes(x = father, y = daughter)) +
  geom_point() +
  geom_abline(intercept = alpha, slope = beta, color = "blue") +
  labs(title = "Regression of Daughter's Height on Father's Height",
       x = "Father's Height",
       y = "Daughter's Height")

```

```{r eval=TRUE}
model <- lm(daughter ~ father, data = heights)
summary(model)

```

```{r eval=TRUE}
heights <- heights %>%
  mutate(father_centered = father - mean(father))

model_centered <- lm(daughter ~ father_centered, data = heights)
summary(model_centered)

```

```{r eval=TRUE}
mean(heights$daughter)
coef(model_centered)[1]  # 截距

```

```{r eval=TRUE}
library(devtools)
install_github("rafalab/excessmort")
library(excessmort)
library(dplyr)
library(lubridate)

# 提取年份
puerto_rico_counts <- puerto_rico_counts %>%
  mutate(year = year(date))

# 确保 agegroup 格式正确
unique(puerto_rico_counts$agegroup)

# 过滤 2002-2017 年龄段 60+ 数据
counts <- puerto_rico_counts %>%
  filter(year >= 2002 & year <= 2017, agegroup %in% c("60-64", "65-69", "70-74", "75-79", "80-84", "85+"))

```

```{r eval=TRUE}
library(lubridate)

landfall_date <- as.Date("2017-09-20")

Sys.setlocale("LC_TIME", "C") 

wday(landfall_date, label = TRUE)

```

```{r eval=TRUE}
weekly_counts <- counts %>%
  mutate(week_start = floor_date(date, unit = "week", week_start = wday(landfall_date)))

```

```{r eval=TRUE}
weekly_counts <- counts %>%
  mutate(week_start = floor_date(date, unit = "week", week_start = wday(landfall_date))) %>%
  group_by(week_start, sex, agegroup) %>%
  summarise(total_deaths = sum(outcome), .groups = "drop") %>%  # 用 outcome 替换 deaths
  filter(n() == 7) %>%
  mutate(MMWR_week = week(week_start))

```

```{r eval=TRUE}
ggplot(puerto_rico_counts, aes(x = year, y = population, color = agegroup)) +
  geom_line() +
  facet_wrap(~sex) +
  labs(title = "Population Trends by Age and Sex in Puerto Rico")

```

```{r eval=TRUE}
library(ggplot2)
library(dplyr)
library(lubridate)

# 计算 week_start, 按周汇总死亡人数和人口
weekly_counts <- counts %>%
  mutate(week_start = floor_date(date, unit = "week", week_start = wday(landfall_date))) %>%
  group_by(week_start, sex, agegroup) %>%
  summarise(
    total_deaths = sum(outcome, na.rm = TRUE),  # 确保 NA 不影响计算
    population = mean(population, na.rm = TRUE),  # 计算人口均值，避免丢失
    .groups = "drop"
  ) %>%
  mutate(
    MMWR_week = week(week_start),
    year = year(week_start)  # 提取年份
  )

# 确保 weekly_counts 仍然有数据
print(dim(weekly_counts))
print(head(weekly_counts))
summary(weekly_counts$total_deaths)
summary(weekly_counts$population)
summary(weekly_counts$MMWR_week)
ggplot(weekly_counts, aes(x = as.factor(MMWR_week), y = total_deaths / population * 1000)) +
  geom_boxplot() +
  geom_point(data = filter(weekly_counts, year == 2017), color = "red", size = 2) +  # 2017 年数据用红色点表示
  labs(title = "Mortality Rate per MMWR Week (2002-2016) with 2017 Data in Red",
       x = "MMWR Week",
       y = "Mortality Rate per 1,000")

```

```{r eval=TRUE}
library(dplyr)

weekly_counts <- weekly_counts %>%
  mutate(rate = (total_deaths / population) * 1000)

model <- lm(rate ~ year + MMWR_week + agegroup + sex + population, data = weekly_counts)
summary(model)

```

```{r eval=TRUE}
weekly_counts$expected_deaths <- predict(model, newdata = weekly_counts)
weekly_counts$excess_deaths <- weekly_counts$total_deaths - weekly_counts$expected_deaths

ggplot(weekly_counts, aes(x = week_start, y = excess_deaths)) +
  geom_line() +
  geom_ribbon(aes(ymin = excess_deaths - 1.96 * sd(excess_deaths), ymax = excess_deaths + 1.96 * sd(excess_deaths)), alpha = 0.2) +
  labs(title = "Weekly Excess Mortality in 2017")

```

```{r eval=TRUE}
ggplot(weekly_counts, aes(x = week_start, y = rate, color = sex)) +
  geom_line() +
  geom_line(aes(y = predict(model, newdata = weekly_counts)), linetype = "dashed") +
  facet_wrap(~agegroup) +
  labs(title = "Observed vs. Predicted Mortality Rates")

```



